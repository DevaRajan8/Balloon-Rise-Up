function CollisionDetector.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push argument 0
call Utils.setScale 1
pop this 0
push pointer 0
return
function CollisionDetector.checkCollision 7
push argument 0
pop pointer 0
push argument 4
pop local 0
push argument 4
push argument 6
add
pop local 1
push argument 5
pop local 2
push argument 5
push argument 7
add
pop local 3
push local 3
push argument 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 2
push local 3
sub
pop local 4
label IF_FALSE0
push local 2
push argument 2
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 3
push argument 2
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop local 4
label IF_FALSE2
label IF_FALSE1
push local 2
push argument 2
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
push argument 2
sub
pop local 4
label IF_FALSE3
push local 4
push argument 3
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
return
label IF_FALSE4
push local 0
push this 0
push local 4
call Utils.scaledSin 2
sub
pop local 5
push local 1
push this 0
push local 4
call Utils.scaledSin 2
add
pop local 6
push argument 1
push local 5
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 1
push local 6
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
return
label IF_FALSE6
label IF_FALSE5
push constant 0
return
